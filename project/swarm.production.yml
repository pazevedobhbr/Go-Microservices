version: '3'

services:
  caddy:
    image: pazevedo/micro-caddy-production:1.0.0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: pazevedo/front-end:1.0.4
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://broker.pauloazevedo.co"

  broker-service:
    image: pazevedo/broker-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: pazevedo/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: pazevedo/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=3"

  logger-service:
    image: pazevedo/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: pazevedo/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      FROM_NAME: "paulo"
      FROM_ADDRESS: "paulo@example.com"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    deploy:
      mode: replicated
      replicas: 1

  mailhog:
    image: 'mailhog/mailhog:latest'
    deploy:      
      mode: replicated
      replicas: 1
    ports:
      - "8025:8025"

  mongo:
    image: 'mongo:4.2.7-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
        MONGO_INITDB_DATABASE: logs
        MONGO_INITDB_ROOT_USERNAME: admin
        MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
       - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
    caddy_data:
      external: true
    caddy_config: